dim swApp
dim storePath
dim docVisible
#If VBA7 Then
Private Type BROWSEINFO
   hwndOwner       As LongPtr
   pIDLRoot        As Long
   pszDisplayName  As String
   lpszTitle       As String
   ulFlags         As Long
   lpfnCallback    As LongPtr
   lParam          As LongPtr
  iImage          As Long
End Type
Private Declare PtrSafe Function SHBrowseForFolder Lib "Shell32" (lpbi As BROWSEINFO) As Long
Private Declare PtrSafe Function SHGetPathFromIDList Lib "Shell32" (ByVal pidList As Long, ByVal lpBuffer As String) As Long
Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32" (ByVal hMem As Long)
#Else
Private Type BROWSEINFO
   hwndOwner       As Long
   pIDLRoot        As Long
   pszDisplayName  As Long
   lpszTitle       As String
   ulFlags         As Long
   lpfnCallback    As Long
   lParam          As Long
  iImage          As Long
End Type
Private Declare Function SHBrowseForFolder Lib "Shell32" (lpbi As BROWSEINFO) As Long
Private Declare Function SHGetPathFromIDList Lib "Shell32" (ByVal pidList As Long, ByVal lpBuffer As String) As Long
Private Declare Sub CoTaskMemFree Lib "ole32" (ByVal hMem As Long)
#End If
Private Const MAX_PATH = 260
'Directories only
Private Const BIF_RETURNONLYFSDIRS = &H1&
'Windows 2000 (Shell32.dll 5.0) extended dialog
Private Const BIF_NEWDIALOGSTYLE = &H40
' show edit box
Private Const BIF_EDITBOX = &H10&
Function getLastFeatureByType(model,typ)  
  Set feat = model.FirstFeature ' Get the 1st feature in part
  Set res = Nothing
  Count = 0
  Do While Not feat Is Nothing ' While we have a valid feature
    If feat.GetTypeName() = typ Then
      Set res = feat
    End If
    Set feat = feat.GetNextFeature() ' Get the next feature
  Loop ' Continue until no more
  Set getLastFeatureByType = res
End Function
' this code with copy a matrix to a other
Function copyMat4x4(source)
Dim res(0 To 15) As Double
For i = 0 To 15
 res(i) = source(i)
Next
copyMat4x4 = res
End Function

' This code creates a mat from a sw mat
Function createMatFromSWMat(source)
 Dim res(0 To 15) As Double
 res(0) = source(0)
 res(1) = source(1)
 res(2) = source(2)
 res(3) = 0
 res(4) = source(3)
 res(5) = source(4)
 res(6) = source(5)
 res(7) = 0
 res(8) = source(6)
 res(9) = source(7)
 res(10) = source(8)
 res(11) = 0
 res(12) = source(9)
 res(13) = source(10)
 res(14) = source(11)
 res(15) = source(12)
 createMatFromSWMat = res
End Function
Function createSWMatFromMat(source)
 Dim res(0 To 15) As Double
 res(0) = source(0)
 res(1) = source(1)
 res(2) = source(2)
 res(3) = source(4)
 res(4) = source(5)
 res(5) = source(6)
 res(6) = source(8)
 res(7) = source(9)
 res(8) = source(10)
 res(9) = source(12)
 res(10) = source(13)
 res(11) = source(14)
 res(12) = source(15)
 res(13) = 0
 res(14) = 0
 res(15) = 0
 createSWMatFromMat = res
End Function
Function createMat4x4FromValues(x1,x2,x3,y1,y2,y3,z1,z2,z3,t1,t2,t3)
 Dim res(0 To 15) As Double
 res(0) = x1
 res(1) = x2
 res(2) = x3
 res(3) = 0
 res(4) = y1
 res(5) = y2
 res(6) = y3
 res(7) = 0
 res(8) = z1
 res(9) = z2
 res(10) =z3
 res(11) = 0
 res(12) = t1
 res(13) = t2
 res(14) = t3
 res(15) = 1
 createMat4x4FromValues = res
End Function
' this code will mult a common mat with any other stuff
Function multMatMat(ld, xld, yld, rd, xrd, yrd)
  mulRes = yld * xrd
  'Dim od(0 To 0) As Variant
  ReDim od(mulRes - 1) As Double
  For i = 0 To mulRes - 1
   od(i) = 0#
  Next
  y = 0
  While y < yld
    x = 0
    While x < xrd
      i = 0
      While i < xld
       od(x * yld + y) = od(x * yld + y) + ld(i * yld + y) * rd(x * yrd + i)
       i = i + 1
      Wend
      x = x + 1
    Wend
    y = y + 1
  Wend
  multMatMat = od

End Function
' this code will mult a vector with a matrix
Function mulMat4x4Values3d(mat, x,y,z)
  tmp = createVec4d(x, y, z, 1)
  res = multMatMat(mat, 4, 4, tmp, 1, 3)
  mulMat4x4Values3d = createVec3d(res(0), res(1), res(2))
End Function
Function mulMat4x4Vec3d(mat, vec)
  tmp = createVec4d(vec(0), vec(1), vec(2), 1)
  res = multMatMat(mat, 4, 4, tmp, 1, 3)
  mulMat4x4Vec3d = createVec3d(res(0), res(1), res(2))
End Function
Function mulMat4x4Mat4x4(mat1, mat2)
  mulMat4x4Mat4x4 = multMatMat(mat1, 4, 4, mat2, 4, 4)
End Function
' create a 4x4 matrix
Function createMat4x4()
 Dim res(0 To 15) As Double
 for i = 0 to 15 
 res(i) = 0
 next
 createMat4x4 = res
End Function
Function createMat4x4Ident()
 Dim res(0 To 15) As Double
 res(0) = 1
 res(5) = 1
 res(10) = 1
 res(15) = 1
 res(1) = 0
 res(2) = 0
 res(3) = 0
 res(4) = 0
 res(6) = 0
 res(7) = 0
 res(8) = 0
 res(9) = 0
 res(11) = 0
 res(12) = 0
 res(13) = 0
 res(14) = 0
 createMat4x4Ident = res
End Function
' this function create a new vector
Function createVec3d(x, y, z)
 Dim res(0 To 2) As Double
 res(0) = x
 res(1) = y
 res(2) = z
 createVec3d = res
End Function
' this function create a new vector
Function createVec4d(x, y, z, w)
 Dim res(0 To 3) As Double
 res(0) = x
 res(1) = y
 res(2) = z
 res(3) = w
 createVec4d = res
End Function

Function getMatTVec(mat)
 getMatTVec = createVec3d(mat(12), mat(13), mat(14))
End Function

Sub setMatTVec(mat, v)
 mat(12) = v(0)
 mat(13) = v(1)
 mat(14) = v(2)
End Sub
Sub setMatXVec(mat, v)
 mat(0) = v(0)
 mat(1) = v(1)
 mat(2) = v(2)
End Sub
Sub setMatYVec(mat, v)
 mat(4) = v(0)
 mat(5) = v(1)
 mat(6) = v(2)
End Sub
Sub setMatZVec(mat, v)
 mat(8) = v(0)
 mat(9) = v(1)
 mat(10) = v(2)
End Sub
Sub setMatScale(mat, s)
 mat(15) = s
End Sub
Function getMatXVec(mat)
 getMatXVec = createVec3d(mat(0), mat(1), mat(2))
End Function
Function getMatYVec(mat)
 getMatYVec = createVec3d(mat(4), mat(5), mat(6))
End Function
Function getMatZVec(mat)
 getMatZVec = createVec3d(mat(8), mat(9), mat(10))
End Function

Function negVec3d(v)
 negVec3d = createVec3d(-v(0), -v(1), -v(2))
End Function
Function scaleVec3d(v,s)
 scaleVec3d = createVec3d(v(0)*s,v(1)*s,v(2)*s)
End Function
' invert a 4x4 matrix
Function invMat4x4(source)
target = copyMat4x4(source)
setMatTVec target, createVec3d(0, 0, 0)
 target(1) = source(4)
 target(4) = source(1)
 target(2) = source(8)
 target(8) = source(2)
 target(6) = source(9)
 target(9) = source(6)
 setMatScale target,1
 t = getMatTVec(source)
 v = mulMat4x4Vec3d(target, t)
 setMatTVec target, negVec3d(v)
 invMat4x4 = target
End Function
Function getFaceFromModel(part, pos, normal)
 Dim partBodies As Variant
 partBodies = part.GetBodies(swSolidBody)
 For k = LBound(partBodies) To UBound(partBodies)
   found = 0
   Dim body As Object
   Set body = partBodies(k)
   Set face = body.GetFirstFace()
   getFaceFromModel = noting
   Do While Not face Is Nothing ' While we have a valid feature
     Set sur = face.GetSurface()
     If sur.IsPlane() Then
       planePara = sur.PlaneParams
       faceNormal = face.normal
       nTest = faceNormal(0) * normal(0) + faceNormal(1) * normal(1) + faceNormal(2) * normal(2)
       If nTest > 1 - 0.000001 Then
         ' check projection
         closeRes = face.GetClosestPointOn(pos(0), pos(1), pos(2))
         dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
         If dTest < 0.000001 Then
           Set getFaceFromModel = face
           found=1
           Exit Do
         End If
       End If
     else
       If sur.IsCylinder() then
         closeRes = face.GetClosestPointOn(pos(0), pos(1), pos(2))
         dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
         If dTest < 0.00000001 Then
           res=sur.EvaluateAtPoint(closeRes(0),closeRes(1),closeRes(2))
           nTest=res(0)*normal(0)+res(1)*normal(1)+res(2)*normal(2)
           if nTest>1-0.00000001 then
             Set getFaceFromModel = face
             found=1
             Exit Do
           End if
         End if
       End if
     End if
     Set face = face.GetNextFace ' Get the next Face
   Loop
   If (found = 1) Then
     Exit For
   End If
 Next k
End Function
Function getEdgeFromModel(part, pos,byref edgeRet)
 Dim partBodies As Variant
 partBodies = part.GetBodies(swSolidBody)
 For k = LBound(partBodies) To UBound(partBodies)
   Dim body As Object
   Set body = partBodies(k)
   edges= body.GetEdges()
   start= LBound(edges)
   ende = UBound(edges)
   For i = start To ende
     Set edge = edges(i)
     closeRes=edge.GetClosestPointOn(pos(0),pos(1),pos(2))
     dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
     If dTest < 0.00000001 Then
       set edgeRet=edge
       getEdgeFromModel=true
       exit function
     End If
   Next i
 Next k
 getEdgeFromModel=false
End Function
sub cLn(part,wMat,x1,y1,x2,y2)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
Part.SketchManager.CreateLine pk1(0),pk1(1),0,pk2(0),pk2(1),0
end sub
sub cCLn(part,wMat,x1,y1,x2,y2)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
Part.CreateCenterLineVB pk1(0),pk1(1),0,pk2(0),pk2(1),0
end sub
sub cArc(part,wMat,x1,y1,x2,y2,x3,y3)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
pk3=mulMat4x4Values3d(wMat,x3,y3,0)
Part.SketchManager.Create3PointArc pk1(0),pk1(1),0,pk3(0),pk3(1),0,pk2(0),pk2(1),0
end sub
sub cCir(part,wMat,x1,y1,rad)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
Part.SketchManager.CreateCircleByRadius pk1(0),pk1(1),0,rad
end sub
Public Function BrowseForFolder() As String
  Dim tBI         As BROWSEINFO
  Dim lngPIDL     As Long
  Dim strPath     As String
  With tBI
    .lpszTitle = ""
    .ulFlags = BIF_RETURNONLYFSDIRS Or BIF_NEWDIALOGSTYLE Or BIF_EDITBOX
  End With
  lngPIDL = SHBrowseForFolder(tBI)
  If (lngPIDL <> 0) Then
    ' get path from ID list
    strPath = Space$(MAX_PATH)
    SHGetPathFromIDList lngPIDL, strPath
    strPath = Left$(strPath, InStr(strPath, Chr$(0)) - 1)
    ' release list
    CoTaskMemFree lngPIDL
  End If
  BrowseForFolder = strPath
End Function
Sub CreatePart0
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M20123LL1W01-switch.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M20123LL1W01-switch.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles - Switch"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M20123LL1W01-switch"
customPropMgr.Add2 "NBSYN", 30, "$PN.-switch"
customPropMgr.Add2 "LINA", 30, "M20123LL1W01-switch"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "PLS", 30, "1 - SPST/SPDT"
customPropMgr.Add2 "CRCTS", 30, "2 - ON/NONE/ON"
customPropMgr.Add2 "TGGL", 30, "Locking Lever"
customPropMgr.Add2 "TGGLS", 30, "L - .201" & Chr(34) & " (5.1mm) Dia. Locking Lever"
customPropMgr.Add2 "BSHNG", 30, "L1 - .291" & Chr(34) & " (7.4mm) Threaded with Keyway for Lever Lock"
customPropMgr.Add2 "CMR", 30, "W - Silver; Rated 6A @ 125V AC & 3A @ 250V AC"
customPropMgr.Add2 "TRMNLS", 30, "01 - Solder Lug"
customPropMgr.Add2 "CPS", 30, "Standard Nickel Plated Cap Supplied with Switch"
customPropMgr.Add2 "CCLR", 30, "N/A"
customPropMgr.Add2 "WIDTH", 30, "0.512"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M20123LL1W01-switch"
customPropMgr.Add2 "BOMINFO", 30, "M20123LL1W01-switch"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M20123LL1W01-switch"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.30588236451149
valRGB(1)=0.43137255311012
valRGB(2)=0.27843138575554
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag0 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M20123LL1W01-switch.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart1
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M201L1M201-bushing.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M201L1M201-bushing.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles - Bushing"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M201L1M201-bushing"
customPropMgr.Add2 "NBSYN", 30, "$PN.-bushing"
customPropMgr.Add2 "LINA", 30, "M201L1M201-bushing"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "PLS", 30, "1 - SPST/SPDT"
customPropMgr.Add2 "BSHNG", 30, "L1 - .291" & Chr(34) & " (7.4mm) Threaded with Keyway for Lever Lock"
customPropMgr.Add2 "WIDTH", 30, "0.512"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M201L1M201-bushing"
customPropMgr.Add2 "BOMINFO", 30, "M201L1M201-bushing"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M201L1M201-bushing"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag6 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M201L1M201-bushing.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart2
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M20L1M20L12-contact.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M20L1M20L12-contact.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles - Contact"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M20L1M20L12-contact"
customPropMgr.Add2 "NBSYN", 30, "$PN.-contact"
customPropMgr.Add2 "LINA", 30, "M20L1M20L12-contact"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "CRCTS", 30, "2 - ON/NONE/ON"
customPropMgr.Add2 "BSHNG", 30, "L1 - Threaded with Keyway"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M20L1M20L12-contact"
customPropMgr.Add2 "BOMINFO", 30, "M20L1M20L12-contact"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M20L1M20L12-contact"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag12 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M20L1M20L12-contact.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart3
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M20L-toggles.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M20L-toggles.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles - toggles"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M20L-toggles"
customPropMgr.Add2 "NBSYN", 30, "$PN.-toggles"
customPropMgr.Add2 "LINA", 30, "M20L-toggles"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "TGGLS", 30, "L - .201" & Chr(34) & " (5.1mm) Dia. Locking Lever"
customPropMgr.Add2 "CPS", 30, "Standard Nickel Plated Cap Supplied with Switch"
customPropMgr.Add2 "CCLR", 30, "N/A"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M20L-toggles"
customPropMgr.Add2 "BOMINFO", 30, "M20L-toggles"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M20L-toggles"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag16 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M20L-toggles.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart4
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M20L-caps.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M20L-caps.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles - caps"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M20L-caps"
customPropMgr.Add2 "NBSYN", 30, "$PN.-caps"
customPropMgr.Add2 "LINA", 30, "M20L-caps"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "TGGLS", 30, "L - .201" & Chr(34) & " (5.1mm) Dia. Locking Lever"
customPropMgr.Add2 "CPS", 30, "Standard Nickel Plated Cap Supplied with Switch"
customPropMgr.Add2 "CCLR", 30, "N/A"
customPropMgr.Add2 "WIDTH", 30, "0.512"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M20L-caps"
customPropMgr.Add2 "BOMINFO", 30, "M20L-caps"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M20L-caps"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75
valRGB(1)=0.75
valRGB(2)=0.75
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag20 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M20L-caps.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart5
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "AT513H.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "AT513H.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Hex Nut - Bushing Mount Miniature Toggles"
customPropMgr.Add2 "NT", 30, "Series M - Standard Hardwarw for Small & Large Bushings"
customPropMgr.Add2 "NB", 30, "AT513H"
customPropMgr.Add2 "NBSYN", 30, "$PN."
customPropMgr.Add2 "LINA", 30, "AT513H"
customPropMgr.Add2 "PN", 30, "AT513H"
customPropMgr.Add2 "S", 30, "0.315"
customPropMgr.Add2 "D", 30, "1/4-40"
customPropMgr.Add2 "T", 30, "0.059"
customPropMgr.Add2 "W", 30, "0.354"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "AT513H"
customPropMgr.Add2 "BOMINFO", 30, "AT513H"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="AT513H"
part.SummaryInfo(4)="Series M - Standard Hardwarw for Small & Large Bushings"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag22 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "AT513H.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart6
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "AT507H.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "AT507H.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Locking Ring - Bushing Mount Miniature Toggles"
customPropMgr.Add2 "NT", 30, "Series M - Standard Hardwarw for Small & Large Bushings"
customPropMgr.Add2 "NB", 30, "AT507H"
customPropMgr.Add2 "NBSYN", 30, "$PN."
customPropMgr.Add2 "LINA", 30, "AT507H"
customPropMgr.Add2 "PN", 30, "AT507H"
customPropMgr.Add2 "T1", 30, "0.023"
customPropMgr.Add2 "LC", 30, "0.486"
customPropMgr.Add2 "T2", 30, "0.020"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "AT507H"
customPropMgr.Add2 "BOMINFO", 30, "AT507H"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="AT507H"
part.SummaryInfo(4)="Series M - Standard Hardwarw for Small & Large Bushings"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag26 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "AT507H.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart7
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "AT509.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "AT509.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Lockwasher - Bushing Mount Miniature Toggles"
customPropMgr.Add2 "NT", 30, "Series M - Standard Hardwarw for Small & Large Bushings"
customPropMgr.Add2 "NB", 30, "AT509"
customPropMgr.Add2 "NBSYN", 30, "$PN."
customPropMgr.Add2 "LINA", 30, "AT509"
customPropMgr.Add2 "PN", 30, "AT509"
customPropMgr.Add2 "D", 30, "0.402"
customPropMgr.Add2 "T", 30, "0.020"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "AT509"
customPropMgr.Add2 "BOMINFO", 30, "AT509"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="AT509"
part.SummaryInfo(4)="Series M - Standard Hardwarw for Small & Large Bushings"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag29 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "AT509.sldprt",0,0,nothing,errors,warnings
End Sub
Sub CreatePart8
dim errors as long
dim warnings as long
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set res=swApp.OpenDoc6 ( storePath & "M201201-terminals.sldprt",1,3,"", errors, warnings)
if not res is nothing then
 if (docVisible=0) then
  swApp.DocumentVisible 1, 1
 end if
 exit sub
end if
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
Dim longstatus As Long
Dim sPartTemplateName As String
sPartTemplateName = swApp.GetUserPreferenceStringValue(8)
Set part = swApp.NewDocument(sPartTemplateName, 0, 0, 0)
swApp.ActivateDoc2 "M201201-terminals.sldprt", False, longstatus
Set part = swApp.ActiveDoc
part.SketchManager.AddToDB = true
part.SketchManager.DisplayWhenAdded = false
part.ActiveView.EnableGraphicsUpdate = false
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles-Terminals"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M201201-terminals"
customPropMgr.Add2 "NBSYN", 30, "$PN.-terminals"
customPropMgr.Add2 "LINA", 30, "M201201-terminals"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "PLS", 30, "1 - SPST/SPDT"
customPropMgr.Add2 "CRCTS", 30, "2 - ON/NONE/ON"
customPropMgr.Add2 "TRMNLS", 30, "01 - Solder Lug"
customPropMgr.Add2 "WIDTH", 30, "0.512"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M201201-terminals"
customPropMgr.Add2 "BOMINFO", 30, "M201201-terminals"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
customPropMgr.Add2 "IsFastener", 30, "0"
part.SummaryInfo(0)="M201201-terminals"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.75294119119644
valRGB(1)=0.75294119119644
valRGB(2)=0.75294119119644
part.MaterialPropertyValues=valRGB
Dim featMgr as object
set featMgr = part.FeatureManager
codeBag31 part,featMgr
part.ActiveView.EnableGraphicsUpdate = true
part.SketchManager.DisplayWhenAdded = true
part.SketchManager.AddToDB = false
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M201201-terminals.sldprt",0,0,nothing,errors,warnings
End Sub
sub CreatePart9
dim errors as long
dim warnings as long
set res=swApp.OpenDoc6 ( storePath & "M2012LL1W01.sldasm",2,3,"", errors, warnings)
if not res is nothing then
 exit sub
end if
createPart0
createPart1
createPart2
createPart3
createPart4
createPart5
createPart6
createPart7
createPart5
createPart8
set part=swApp.NewAssembly
part.SetUnits 3,2,64,5,false
Set modelExt = part.Extension
Set customPropMgr = modelExt.CustomPropertyManager("")
customPropMgr.Add2 "NN", 30, "Bushing Mount Miniature Toggles"
customPropMgr.Add2 "NT", 30, "Series M - Miniature Toggles"
customPropMgr.Add2 "NB", 30, "M2012LL1W01"
customPropMgr.Add2 "NBSYN", 30, "$PN."
customPropMgr.Add2 "LINA", 30, "M2012LL1W01"
customPropMgr.Add2 "PN", 30, "M2012LL1W01"
customPropMgr.Add2 "SRS", 30, "M20"
customPropMgr.Add2 "PLS", 30, "1 - SPST/SPDT"
customPropMgr.Add2 "CRCTS", 30, "2 - ON/NONE/ON"
customPropMgr.Add2 "TGGL", 30, "Locking Levers"
customPropMgr.Add2 "TGGLS", 30, "L - .201" & Chr(34) & " (5.1mm) Dia. Locking Lever"
customPropMgr.Add2 "BSHNG", 30, "L1 - .291" & Chr(34) & " (7.4mm) Threaded with Keyway for Lever Lock"
customPropMgr.Add2 "CMR", 30, "W - Silver; Rated 6A @ 125V AC & 3A @ 250V AC"
customPropMgr.Add2 "TRMNLS", 30, "01 - Solder Lug"
customPropMgr.Add2 "CPS", 30, "Standard Nickel Plated Cap Supplied with Switch"
customPropMgr.Add2 "CCLR", 30, "N/A"
customPropMgr.Add2 "OCHR", 30, "Download pdf"
customPropMgr.Add2 "SUPPLIER", 30, "NKKSWITCHES"
customPropMgr.Add2 "ARTICLENO", 30, "M2012LL1W01"
customPropMgr.Add2 "BOMINFO", 30, "M2012LL1W01"
customPropMgr.Add2 "CREATOR", 30, "CADENAS GmbH"
part.SummaryInfo(0)="M2012LL1W01"
part.SummaryInfo(4)="Series M - Miniature Toggles"
part.SummaryInfo(2)="Cadenas PARTsolutions"
if (docVisible=0) then
 swApp.DocumentVisible 0, 1
end if
set comp = part.AddComponent5 (storePath &"M20123LL1W01-switch.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"M201L1M201-bushing.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,-0.000254,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"M20L1M20L12-contact.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,0,0,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"M20L-toggles.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,0,0.0097028,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"M20L-caps.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,4.6659043047514e-19,0.0097028,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"AT513H.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,0,1,0,-1,0,0,0.00590042,9.1762784660111e-20)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"AT507H.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(0,0,1,1,0,0,0,1,0,0,0.00378714,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"AT509.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,0,1,0,-1,0,0,0.00295656,3.1106028698343e-20)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"AT513H.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,0,1,0,-1,0,0,0.00183515,9.1762784660111e-20)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
set comp = part.AddComponent5 (storePath &"M201201-terminals.sldprt", 0, "", false, "",0,0,0)
posMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,-0.0094234,0)
swPosMat=createSWMatFromMat(posMat)
comp.SetXForm(swPosMat)
swApp.CloseDoc storePath &"M20123LL1W01-switch.sldprt"
swApp.CloseDoc storePath &"M201L1M201-bushing.sldprt"
swApp.CloseDoc storePath &"M20L1M20L12-contact.sldprt"
swApp.CloseDoc storePath &"M20L-toggles.sldprt"
swApp.CloseDoc storePath &"M20L-caps.sldprt"
swApp.CloseDoc storePath &"AT513H.sldprt"
swApp.CloseDoc storePath &"AT507H.sldprt"
swApp.CloseDoc storePath &"AT509.sldprt"
swApp.CloseDoc storePath &"AT513H.sldprt"
swApp.CloseDoc storePath &"M201201-terminals.sldprt"
if (docVisible=0) then
 swApp.DocumentVisible 1, 1
end if
part.EditRebuild3
part.Rebuild swRebuildAll
Set modelExt = part.Extension
modelExt.SaveAs storePath & "M2012LL1W01.sldasm",0,0,nothing,errors,warnings
end sub
sub codeBag1(part,wMat)
cLn part,wMat,-0.0039497,-0.0051435,-0.0039497,-0.006372352
cArc part,wMat,-0.0039497,-0.006372352,-0.0039116098226797,-0.0064643098226797,-0.003819652,-0.0065024
cLn part,wMat,-0.003819652,-0.0065024,0.003819652,-0.0065024
cArc part,wMat,0.003819652,-0.0065024,0.0039116098226797,-0.0064643098226797,0.0039497,-0.006372352
cLn part,wMat,0.0039497,-0.006372352,0.0039497,-0.0051435
cLn part,wMat,0.0039497,-0.0051435,0.0036957,-0.0051435
cLn part,wMat,0.0036957,-0.0051435,0.0036957,-0.0029397129469
cLn part,wMat,0.0036957,-0.0029397129469,0.0033147,-0.0028725323672501
cLn part,wMat,0.0033147,-0.0028725323672501,0.0033147,-0.0018264676327499
cLn part,wMat,0.0033147,-0.0018264676327499,0.0036957,-0.0017592870531
cLn part,wMat,0.0036957,-0.0017592870531,0.0036957,0.0017592870530999
cLn part,wMat,0.0036957,0.0017592870530999,0.0033147,0.0018264676327499
cLn part,wMat,0.0033147,0.0018264676327499,0.0033147,0.0028725323672501
cLn part,wMat,0.0033147,0.0028725323672501,0.0036957,0.0029397129469
cLn part,wMat,0.0036957,0.0029397129469,0.0036957,0.0051435
cLn part,wMat,0.0036957,0.0051435,0.0039497,0.0051435
cLn part,wMat,0.0039497,0.0051435,0.0039497,0.006372352
cArc part,wMat,0.0039497,0.006372352,0.0039116098226797,0.0064643098226797,0.003819652,0.0065024
cLn part,wMat,0.003819652,0.0065024,-0.003819652,0.0065024
cArc part,wMat,-0.003819652,0.0065024,-0.0039116098226797,0.0064643098226797,-0.0039497,0.006372352
cLn part,wMat,-0.0039497,0.006372352,-0.0039497,0.0051435
cLn part,wMat,-0.0039497,0.0051435,-0.0036957,0.0051435
cLn part,wMat,-0.0036957,0.0051435,-0.0036957,0.0029397129469001
cLn part,wMat,-0.0036957,0.0029397129469001,-0.0033147,0.0028725323672501
cLn part,wMat,-0.0033147,0.0028725323672501,-0.0033147,0.0018264676327499
cLn part,wMat,-0.0033147,0.0018264676327499,-0.0036957,0.0017592870531
cLn part,wMat,-0.0036957,0.0017592870531,-0.0036957,-0.0017592870530999
cLn part,wMat,-0.0036957,-0.0017592870530999,-0.0033147,-0.0018264676327499
cLn part,wMat,-0.0033147,-0.0018264676327499,-0.0033147,-0.0028725323672501
cLn part,wMat,-0.0033147,-0.0028725323672501,-0.0036957,-0.0029397129469
cLn part,wMat,-0.0036957,-0.0029397129469,-0.0036957,-0.0051435
cLn part,wMat,-0.0036957,-0.0051435,-0.0039497,-0.0051435
Part.SketchManager.InsertSketch True
end sub

sub codeBag2(part,wMat)
cArc part,wMat,-0.0031877,-0.006118352,-0.0031496098226797,-0.0062103098226797,-0.003057652,-0.0062484
cLn part,wMat,-0.003057652,-0.0062484,0.003057652,-0.0062484
cArc part,wMat,0.003057652,-0.0062484,0.0031496098226797,-0.0062103098226797,0.0031877,-0.006118352
cLn part,wMat,0.0031877,-0.006118352,0.0031877,0.006118352
cArc part,wMat,0.0031877,0.006118352,0.0031496098226797,0.0062103098226797,0.003057652,0.0062484
cLn part,wMat,0.003057652,0.0062484,-0.003057652,0.0062484
cArc part,wMat,-0.003057652,0.0062484,-0.0031496098226797,0.0062103098226797,-0.0031877,0.006118352
cLn part,wMat,-0.0031877,0.006118352,-0.0031877,-0.006118352
Part.SketchManager.InsertSketch True
end sub

sub codeBag3(part,wMat)
cLn part,wMat,-0.0010033,0.0043053,0.0010033,0.0043053
cLn part,wMat,0.0010033,0.0043053,0.0010033,0.0050927
cLn part,wMat,0.0010033,0.0050927,-0.0010033,0.0050927
cLn part,wMat,-0.0010033,0.0050927,-0.0010033,0.0043053
Part.SketchManager.InsertSketch True
end sub

sub codeBag4(part,wMat)
cLn part,wMat,-0.0010033,0.0043053,0.0010033,0.0043053
cLn part,wMat,0.0010033,0.0043053,0.0010033,0.0050927
cLn part,wMat,0.0010033,0.0050927,-0.0010033,0.0050927
cLn part,wMat,-0.0010033,0.0050927,-0.0010033,0.0043053
Part.SketchManager.InsertSketch True
end sub

sub codeBag5(part,wMat)
cLn part,wMat,-0.0010033,0.0043053,0.0010033,0.0043053
cLn part,wMat,0.0010033,0.0043053,0.0010033,0.0050927
cLn part,wMat,0.0010033,0.0050927,-0.0010033,0.0050927
cLn part,wMat,-0.0010033,0.0050927,-0.0010033,0.0043053
Part.SketchManager.InsertSketch True
end sub

sub codeBag0(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,-0.000254,0),createVec3d(1,-0.000254,0),createVec3d(0,-0.000254,-1),1
set feat5=part.Extension.GetLastFeatureAdded()
feat5.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,-0.000254,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag1 part,wMat
set feat5=part.Extension.GetLastFeatureAdded()
feat5.select2 false,0
featMgr.FeatureExtrusion2 1,0,1,0,0,0.0091694,0.0091694,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,-0.0094234,0),createVec3d(1,-0.0094234,0),createVec3d(0,-0.0094234,-1),1
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,-0.0094234,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag2 part,wMat
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
featMgr.FeatureCut3 1,0,1,0,0,2.54e-05,2.54e-05,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,-0.0094234,0),createVec3d(1,-0.0094234,0),createVec3d(0,-0.0094234,-1),1
set feat10=part.Extension.GetLastFeatureAdded()
feat10.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,-0.0094234,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag3 part,wMat
set feat10=part.Extension.GetLastFeatureAdded()
feat10.select2 false,0
featMgr.FeatureCut3 1,0,1,0,0,0.000254,0.000254,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,-0.0094234,0.004699),createVec3d(1,-0.0094234,0.004699),createVec3d(0,-0.0094234,-0.995301),1
set feat13=part.Extension.GetLastFeatureAdded()
feat13.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,-0.0094234,0.004699)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag4 part,wMat
set feat13=part.Extension.GetLastFeatureAdded()
feat13.select2 false,0
featMgr.FeatureCut3 1,0,1,0,0,0.000254,0.000254,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,-0.0094234,0.009398),createVec3d(1,-0.0094234,0.009398),createVec3d(0,-0.0094234,-0.990602),1
set feat14=part.Extension.GetLastFeatureAdded()
feat14.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,-0.0094234,0.009398)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag5 part,wMat
set feat14=part.Extension.GetLastFeatureAdded()
feat14.select2 false,0
featMgr.FeatureCut3 1,0,1,0,0,0.000254,0.000254,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
end sub

sub codeBag7(part,wMat)
cLn part,wMat,-0.0039497,-0.0067945,-0.0036957,-0.0067945
cLn part,wMat,-0.0036957,-0.0067945,-0.0036957,-0.000254
cArc part,wMat,-0.0036957,-0.000254,-0.0036213051224214,-7.4394877578617e-05,-0.0034417,0
cLn part,wMat,-0.0034417,0,0.0034417,0
cArc part,wMat,0.0034417,0,0.0036213051224214,-7.4394877578617e-05,0.0036957,-0.000254
cLn part,wMat,0.0036957,-0.000254,0.0036957,-0.0067945
cLn part,wMat,0.0036957,-0.0067945,0.0039497,-0.0067945
cLn part,wMat,0.0039497,-0.0067945,0.0039497,0
cArc part,wMat,0.0039497,0,0.0038753051224214,0.00017960512242138,0.0036957,0.000254
cLn part,wMat,0.0036957,0.000254,-0.0036957,0.000254
cArc part,wMat,-0.0036957,0.000254,-0.0038753051224214,0.00017960512242138,-0.0039497,4.4061976289811e-20
cLn part,wMat,-0.0039497,4.4061976289811e-20,-0.0039497,-0.0067945
Part.SketchManager.InsertSketch True
end sub

sub codeBag8(part,wMat)
cLn part,wMat,-0.00780288,-0.009398,0.00780288,-0.009398
cLn part,wMat,0.00780288,-0.009398,0.00780288,0
cLn part,wMat,0.00780288,0,0.0050927,0
cLn part,wMat,0.0050927,0,0.0050927,-0.0063246
cLn part,wMat,0.0050927,-0.0063246,0.0027305,-0.0063246
cLn part,wMat,0.0027305,-0.0063246,0.0027305,-0.0066675
cArc part,wMat,0.0027305,-0.0066675,0.0026933025612107,-0.0067573025612107,0.0026035,-0.0067945
cLn part,wMat,0.0026035,-0.0067945,0.0020955,-0.0067945
cArc part,wMat,0.0020955,-0.0067945,0.0020056974387893,-0.0067573025612107,0.0019685,-0.0066675
cLn part,wMat,0.0019685,-0.0066675,0.0019685,-0.0063246
cLn part,wMat,0.0019685,-0.0063246,-0.0019685,-0.0063246
cLn part,wMat,-0.0019685,-0.0063246,-0.0019685,-0.0066675
cArc part,wMat,-0.0019685,-0.0066675,-0.0020056974387893,-0.0067573025612107,-0.0020955,-0.0067945
cLn part,wMat,-0.0020955,-0.0067945,-0.0026035,-0.0067945
cArc part,wMat,-0.0026035,-0.0067945,-0.0026933025612107,-0.0067573025612107,-0.0027305,-0.0066675
cLn part,wMat,-0.0027305,-0.0066675,-0.0027305,-0.0063246
cLn part,wMat,-0.0027305,-0.0063246,-0.0050927,-0.0063246
cLn part,wMat,-0.0050927,-0.0063246,-0.0050927,0
cLn part,wMat,-0.0050927,0,-0.00780288,0
cLn part,wMat,-0.00780288,0,-0.00780288,-0.009398
Part.SketchManager.InsertSketch True
end sub

sub codeBag9(part,wMat)
cLn part,wMat,0,0.0076454,0.00270256,0.0076454
cLn part,wMat,0.00270256,0.0076454,0.003175,0.00717296
cLn part,wMat,0.003175,0.00717296,0.003175,0.001143
cLn part,wMat,0.003175,0.001143,0.0040005,0.001143
cLn part,wMat,0.0040005,0.001143,0.0040005,0.000254
cLn part,wMat,0.0040005,0.000254,0.0022225,0.000254
cLn part,wMat,0.0022225,0.000254,0.0022225,0.000127
cLn part,wMat,0.0022225,0.000127,0,0.000127
cLn part,wMat,0,0.000127,0,0.0076454
cCLn part,wMat,0,0.000127,0,0.0076454
Part.SketchManager.InsertSketch True
end sub

sub codeBag10(part,wMat)
cLn part,wMat,-0.0003937,0.0104902,-0.0003937,0.0024892
cLn part,wMat,-0.0003937,0.0024892,0.0003937,0.0024892
cLn part,wMat,0.0003937,0.0024892,0.0003937,0.0104902
cLn part,wMat,0.0003937,0.0104902,-0.0003937,0.0104902
Part.SketchManager.InsertSketch True
end sub

sub codeBag11(part,wMat)
cLn part,wMat,0,0.0076454,0.0022225,0.0076454
cLn part,wMat,0.0022225,0.0076454,0.0022225,0
cLn part,wMat,0.0022225,0,0,0
cLn part,wMat,0,0,0,0.0076454
cCLn part,wMat,0,0,0,0.0076454
Part.SketchManager.InsertSketch True
end sub

sub codeBag6(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag7 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.0065024,0.0065024,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(0,0,-1),createVec3d(0,1,0),1
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag8 part,wMat
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
featMgr.FeatureCut3 0,0,0,0,0,0.0039497,0.0039497,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag9 part,wMat
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
 if getEdgeFromModel(part,createVec3d(-0.003175,0.00717296,0),cylEdge) then
   cylEdge.Select(false)
   Part.InsertCosmeticThread 0,0.00540512,0.0057404,""
 elseif getEdgeFromModel(part,createVec3d(-0.003175,0.001905,0),cylEdge) then
   cylEdge.Select(false)
   Part.InsertCosmeticThread 0,0.00540512,0.0057404,""
 End If
part.CreatePlaneFixed2 createVec3d(0,0.000254,0),createVec3d(1,0.000254,0),createVec3d(0,0.000254,-1),1
set feat11=part.Extension.GetLastFeatureAdded()
feat11.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,0.000254,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag10 part,wMat
set feat11=part.Extension.GetLastFeatureAdded()
feat11.select2 false,0
featMgr.FeatureCut3 1,0,1,0,0,0.00813054,0.00813054,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat13=part.Extension.GetLastFeatureAdded()
feat13.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag11 part,wMat
set feat13=part.Extension.GetLastFeatureAdded()
feat13.select2 false,0
featMgr.FeatureRevolveCut2 6.2831853071796,1,6.2831853071796,0,0,1,1,false,false,false
end sub

sub codeBag13(part,wMat)
cLn part,wMat,0,0.0109728,0.0022225,0.0109728
cLn part,wMat,0.0022225,0.0109728,0.0022225,0
cLn part,wMat,0.0022225,0,0,0
cLn part,wMat,0,0,0,0.0109728
cCLn part,wMat,0,0,0,0.0109728
Part.SketchManager.InsertSketch True
end sub

sub codeBag14(part,wMat)
cLn part,wMat,-0.0022225,0.0112268,-0.0022225,0.0097028
cLn part,wMat,-0.0022225,0.0097028,-0.00073193526549975,0.0097028
cLn part,wMat,-0.00073193526549975,0.0097028,-0.00053039352654998,0.0108458
cLn part,wMat,-0.00053039352654998,0.0108458,0.00053039352654998,0.0108458
cLn part,wMat,0.00053039352654998,0.0108458,0.00073193526549975,0.0097028
cLn part,wMat,0.00073193526549975,0.0097028,0.0022225,0.0097028
cLn part,wMat,0.0022225,0.0097028,0.0022225,0.0112268
cLn part,wMat,0.0022225,0.0112268,-0.0022225,0.0112268
Part.SketchManager.InsertSketch True
end sub

sub codeBag15(part,wMat)
cArc part,wMat,-0.0024765,0.00813054,-0.0022225,0.00838454,-0.0019685,0.00813054
cLn part,wMat,-0.0019685,0.00813054,-0.0024765,0.00813054
cCLn part,wMat,-0.0019685,0.00813054,-0.0024765,0.00813054
Part.SketchManager.InsertSketch True
end sub

sub codeBag12(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag13 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag14 part,wMat
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
featMgr.FeatureCut3 0,0,0,0,0,0.0022225,0.0022225,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag15 part,wMat
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
end sub

sub codeBag17(part,wMat)
cLn part,wMat,-0.0024063307153215,0.0070442564202239,-0.00016211908375491,0.0075417861607834
cLn part,wMat,-0.00016211908375491,0.0075417861607834,0.0014391238429506,0.00031904607486433
cLn part,wMat,0.0014391238429506,0.00031904607486433,-0.00080508778861603,-0.00017848366569519
cLn part,wMat,-0.00080508778861603,-0.00017848366569519,-0.0024063307153215,0.0070442564202239
cCLn part,wMat,-0.00080508778861603,-0.00017848366569519,-0.0024063307153215,0.0070442564202239
Part.SketchManager.InsertSketch True
end sub

sub codeBag18(part,wMat)
cLn part,wMat,-0.0035721569156925,0.00050890686084733,-0.0021083531438377,-0.0060938852605506
cLn part,wMat,-0.0021083531438377,-0.0060938852605506,0.0028760284909124,-0.004988874455551
cLn part,wMat,0.0028760284909124,-0.004988874455551,0.0014122247190576,0.0016139176658469
cLn part,wMat,0.0014122247190576,0.0016139176658469,-0.00072267335972858,0.0011406221564934
cLn part,wMat,-0.00072267335972858,0.0011406221564934,-0.00069454775765826,0.00049643996076625
cLn part,wMat,-0.00069454775765826,0.00049643996076625,-0.0011905061292752,0.00038648863688569
cLn part,wMat,-0.0011905061292752,0.00038648863688569,-0.0014372588369063,0.00098220237020091
cLn part,wMat,-0.0014372588369063,0.00098220237020091,-0.0035721569156925,0.00050890686084733
Part.SketchManager.InsertSketch True
end sub

sub codeBag19(part,wMat)
cLn part,wMat,-0.0018565740959187,0.0045644645621392,-0.0011126365384933,0.0047293915479601
cLn part,wMat,-0.0011126365384933,0.0047293915479601,0.00076348469791353,-0.0037332444670013
cLn part,wMat,0.00076348469791353,-0.0037332444670013,1.9547140488139e-05,-0.0038981714528221
cLn part,wMat,1.9547140488139e-05,-0.0038981714528221,-0.0018565740959187,0.0045644645621392
cCLn part,wMat,1.9547140488139e-05,-0.0038981714528221,-0.0018565740959187,0.0045644645621392
Part.SketchManager.InsertSketch True
end sub

sub codeBag16(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag17 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag18 part,wMat
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
featMgr.FeatureCut3 0,0,0,0,0,0.0022987,0.0022987,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat10=part.Extension.GetLastFeatureAdded()
feat10.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag19 part,wMat
set feat10=part.Extension.GetLastFeatureAdded()
feat10.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
end sub

sub codeBag21(part,wMat)
cLn part,wMat,-0.0041380640664403,0.01485560077319,-0.0035710898580702,0.014981295929042
cArc part,wMat,-0.0035710898580702,0.014981295929042,-0.0029143151829984,0.01495262052745,-0.0023598693306199,0.014599399563672
cLn part,wMat,-0.0023598693306199,0.014599399563672,-0.0011814945263813,0.01331342912236
cLn part,wMat,-0.0011814945263813,0.01331342912236,8.5860102053558e-05,0.0075967618227237
cLn part,wMat,8.5860102053558e-05,0.0075967618227237,-0.0024063307153215,0.0070442564202239
cLn part,wMat,-0.0024063307153215,0.0070442564202239,-0.0041380640664403,0.01485560077319
cCLn part,wMat,-0.0024063307153215,0.0070442564202239,-0.0041380640664403,0.01485560077319
Part.SketchManager.InsertSketch True
end sub

sub codeBag20(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag21 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
end sub

sub codeBag23(part,wMat)
cLn part,wMat,-0.0007493,0,-0.0007493,0.0040005
cLn part,wMat,-0.0007493,0.0040005,-0.00045808741556361,0.0048006
cLn part,wMat,-0.00045808741556361,0.0048006,0.00045808741556361,0.0048006
cLn part,wMat,0.00045808741556361,0.0048006,0.0007493,0.0040005
cLn part,wMat,0.0007493,0.0040005,0.0007493,0
cLn part,wMat,0.0007493,0,-0.0007493,0
cCLn part,wMat,0.0007493,0,-0.0007493,0
Part.SketchManager.InsertSketch True
end sub

sub codeBag24(part,wMat)
cLn part,wMat,-0.008001,-0.008001,0.008001,-0.008001
cLn part,wMat,0.008001,-0.008001,0.008001,0.008001
cLn part,wMat,0.008001,0.008001,-0.008001,0.008001
cLn part,wMat,-0.008001,0.008001,-0.008001,-0.008001
cLn part,wMat,-0.0044958,0,-0.0023096897518931,-0.0040005
cLn part,wMat,-0.0023096897518931,-0.0040005,0.0023096897518931,-0.0040005
cLn part,wMat,0.0023096897518931,-0.0040005,0.0044958,0
cLn part,wMat,0.0044958,0,0.0023096897518931,0.0040005
cLn part,wMat,0.0023096897518931,0.0040005,-0.0023096897518931,0.0040005
cLn part,wMat,-0.0023096897518931,0.0040005,-0.0044958,0
Part.SketchManager.InsertSketch True
end sub

sub codeBag25(part,wMat)
cLn part,wMat,-0.0007493,0,-0.0007493,0.003175
cLn part,wMat,-0.0007493,0.003175,-0.00025781,0.00268351
cLn part,wMat,-0.00025781,0.00268351,0.00025781,0.00268351
cLn part,wMat,0.00025781,0.00268351,0.0007493,0.003175
cLn part,wMat,0.0007493,0.003175,0.0007493,0
cLn part,wMat,0.0007493,0,-0.0007493,0
cCLn part,wMat,0.0007493,0,-0.0007493,0
Part.SketchManager.InsertSketch True
end sub

sub codeBag22(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(0,0,-1),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag23 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureRevolve 6.2831853071796,1,6.2831853071796,0,0,1,1,1
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag24 part,wMat
set feat6=part.Extension.GetLastFeatureAdded()
feat6.select2 false,0
featMgr.FeatureCut3 0,0,0,0,0,0.0014986,0.0014986,1,1,0,0,0,0,0,0,0,0,0,1,1,false,false,false,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(0,0,-1),createVec3d(0,1,0),1
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(0,0,-1,0,1,0,1,0,0,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag25 part,wMat
set feat8=part.Extension.GetLastFeatureAdded()
feat8.select2 false,0
featMgr.FeatureRevolveCut2 6.2831853071796,1,6.2831853071796,0,0,1,1,false,false,false
end sub

sub codeBag27(part,wMat)
cLn part,wMat,-0.0057658,0.0016396285311009,-0.0057658,-0.0016396285311009
cArc part,wMat,-0.0057658,-0.0016396285311009,0.0059944,-1.4682045545618e-18,-0.0057658,0.0016396285311009
cArc part,wMat,-0.0031648236917718,-0.000254,0.003175,-1.1672107311141e-19,-0.0031648236917718,0.000254
cLn part,wMat,-0.0031648236917718,0.000254,-0.0026416,0.000254
cLn part,wMat,-0.0026416,0.000254,-0.0026416,-0.000254
cLn part,wMat,-0.0026416,-0.000254,-0.0031648236917718,-0.000254
Part.SketchManager.InsertSketch True
end sub

sub codeBag28(part,wMat)
cLn part,wMat,-0.00635,-0.0003937,-0.00635,-0.0017018
cLn part,wMat,-0.00635,-0.0017018,-0.0057658,-0.0017018
cLn part,wMat,-0.0057658,-0.0017018,-0.0057658,-0.0007874
cLn part,wMat,-0.0057658,-0.0007874,-0.0044069,-0.0007874
cLn part,wMat,-0.0044069,-0.0007874,-0.0044069,0
cLn part,wMat,-0.0044069,0,-0.0059563,0
cArc part,wMat,-0.0059563,0,-0.0062346879397531,-0.00011531206024686,-0.00635,-0.0003937
Part.SketchManager.InsertSketch True
end sub

sub codeBag26(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat5=part.Extension.GetLastFeatureAdded()
feat5.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag27 part,wMat
set feat5=part.Extension.GetLastFeatureAdded()
feat5.select2 false,0
featMgr.FeatureExtrusion2 1,0,0,0,0,0.0007874,0.0007874,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,0,-1),1
set feat7=part.Extension.GetLastFeatureAdded()
feat7.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag28 part,wMat
set feat7=part.Extension.GetLastFeatureAdded()
feat7.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.0010033,0.0010033,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
end sub

sub codeBag30(part,wMat)
cCir part,wMat,0,0,0.0051054
cLn part,wMat,-0.00381,1.0574874309555e-18,-0.0032004,5.2874371547773e-19
cArc part,wMat,-0.0032004,5.2874371547773e-19,-0.0031517787327403,-0.00055574362780524,-0.0030073922635632,-0.0010946012666995
cLn part,wMat,-0.0030073922635632,-0.0010946012666995,-0.0035802288851943,-0.0013030967460708
cArc part,wMat,-0.0035802288851943,-0.0013030967460708,-0.0032995567884187,-0.001905,-0.0029186293282833,-0.0024490207929057
cLn part,wMat,-0.0029186293282833,-0.0024490207929057,-0.002451648635758,-0.0020571774660408
cArc part,wMat,-0.002451648635758,-0.0020571774660408,-0.0020571774660408,-0.002451648635758,-0.0016002,-0.0027716277022717
cLn part,wMat,-0.0016002,-0.0027716277022717,-0.001905,-0.0032995567884187
cArc part,wMat,-0.001905,-0.0032995567884187,-0.0013030967460708,-0.0035802288851943,-0.00066159955691101,-0.0037521175389765
cLn part,wMat,-0.00066159955691101,-0.0037521175389765,-0.00055574362780524,-0.0031517787327403
cArc part,wMat,-0.00055574362780524,-0.0031517787327403,-1.1166476578764e-18,-0.0032004,0.00055574362780524,-0.0031517787327403
cLn part,wMat,0.00055574362780524,-0.0031517787327403,0.000661599556911,-0.0037521175389765
cArc part,wMat,0.000661599556911,-0.0037521175389765,0.0013030967460708,-0.0035802288851943,0.001905,-0.0032995567884187
cLn part,wMat,0.001905,-0.0032995567884187,0.0016002,-0.0027716277022717
cArc part,wMat,0.0016002,-0.0027716277022717,0.0020571774660408,-0.002451648635758,0.002451648635758,-0.0020571774660408
cLn part,wMat,0.002451648635758,-0.0020571774660408,0.0029186293282833,-0.0024490207929057
cArc part,wMat,0.0029186293282833,-0.0024490207929057,0.0032995567884187,-0.001905,0.0035802288851943,-0.0013030967460708
cLn part,wMat,0.0035802288851943,-0.0013030967460708,0.0030073922635632,-0.0010946012666995
cArc part,wMat,0.0030073922635632,-0.0010946012666995,0.0031517787327403,-0.00055574362780525,0.0032004,-1.0574874309555e-18
cLn part,wMat,0.0032004,-1.0574874309555e-18,0.00381,-1.4099832412739e-18
cArc part,wMat,0.00381,-1.4099832412739e-18,0.0037521175389765,0.000661599556911,0.0035802288851943,0.0013030967460708
cLn part,wMat,0.0035802288851943,0.0013030967460708,0.0030073922635632,0.0010946012666995
cArc part,wMat,0.0030073922635632,0.0010946012666995,0.0027716277022717,0.0016002,0.002451648635758,0.0020571774660408
cLn part,wMat,0.002451648635758,0.0020571774660408,0.0029186293282833,0.0024490207929057
cArc part,wMat,0.0029186293282833,0.0024490207929057,0.0024490207929057,0.0029186293282833,0.001905,0.0032995567884187
cLn part,wMat,0.001905,0.0032995567884187,0.0016002,0.0027716277022717
cArc part,wMat,0.0016002,0.0027716277022717,0.0010946012666995,0.0030073922635632,0.00055574362780524,0.0031517787327403
cLn part,wMat,0.00055574362780524,0.0031517787327403,0.000661599556911,0.0037521175389765
cArc part,wMat,0.000661599556911,0.0037521175389765,-3.8530348984433e-18,0.00381,-0.000661599556911,0.0037521175389765
cLn part,wMat,-0.000661599556911,0.0037521175389765,-0.00055574362780524,0.0031517787327403
cArc part,wMat,-0.00055574362780524,0.0031517787327403,-0.0010946012666995,0.0030073922635632,-0.0016002,0.0027716277022717
cLn part,wMat,-0.0016002,0.0027716277022717,-0.001905,0.0032995567884187
cArc part,wMat,-0.001905,0.0032995567884187,-0.0024490207929057,0.0029186293282833,-0.0029186293282833,0.0024490207929057
cLn part,wMat,-0.0029186293282833,0.0024490207929057,-0.002451648635758,0.0020571774660408
cArc part,wMat,-0.002451648635758,0.0020571774660408,-0.0027716277022717,0.0016002,-0.0030073922635632,0.0010946012666995
cLn part,wMat,-0.0030073922635632,0.0010946012666995,-0.0035802288851943,0.0013030967460708
cArc part,wMat,-0.0035802288851943,0.0013030967460708,-0.0037521175389765,0.000661599556911,-0.00381,1.0574874309555e-18
Part.SketchManager.InsertSketch True
end sub

sub codeBag29(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag30 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.000254,0.000254,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
end sub

sub codeBag32(part,wMat)
cArc part,wMat,-0.0031877,-0.006118352,-0.0031496098226797,-0.0062103098226797,-0.003057652,-0.0062484
cLn part,wMat,-0.003057652,-0.0062484,0.003057652,-0.0062484
cArc part,wMat,0.003057652,-0.0062484,0.0031496098226797,-0.0062103098226797,0.0031877,-0.006118352
cLn part,wMat,0.0031877,-0.006118352,0.0031877,0.006118352
cArc part,wMat,0.0031877,0.006118352,0.0031496098226797,0.0062103098226797,0.003057652,0.0062484
cLn part,wMat,0.003057652,0.0062484,-0.003057652,0.0062484
cArc part,wMat,-0.003057652,0.0062484,-0.0031496098226797,0.0062103098226797,-0.0031877,0.006118352
cLn part,wMat,-0.0031877,0.006118352,-0.0031877,-0.006118352
Part.SketchManager.InsertSketch True
end sub

sub codeBag33(part,wMat)
cLn part,wMat,-0.0010033,-0.0042418,0.0010033,-0.0042418
cLn part,wMat,0.0010033,-0.0042418,0.0010033,0
cLn part,wMat,0.0010033,0,-0.0010033,0
cLn part,wMat,-0.0010033,0,-0.0010033,-0.0042418
cLn part,wMat,-0.0005461,-0.0032512,0.0005461,-0.0032512
cLn part,wMat,0.0005461,-0.0032512,0.0005461,-0.0012446
cLn part,wMat,0.0005461,-0.0012446,-0.0005461,-0.0012446
cLn part,wMat,-0.0005461,-0.0012446,-0.0005461,-0.0032512
Part.SketchManager.InsertSketch True
end sub

sub codeBag34(part,wMat)
cLn part,wMat,-0.0010033,-0.0042418,0.0010033,-0.0042418
cLn part,wMat,0.0010033,-0.0042418,0.0010033,0
cLn part,wMat,0.0010033,0,-0.0010033,0
cLn part,wMat,-0.0010033,0,-0.0010033,-0.0042418
cLn part,wMat,-0.0005461,-0.0032512,0.0005461,-0.0032512
cLn part,wMat,0.0005461,-0.0032512,0.0005461,-0.0012446
cLn part,wMat,0.0005461,-0.0012446,-0.0005461,-0.0012446
cLn part,wMat,-0.0005461,-0.0012446,-0.0005461,-0.0032512
Part.SketchManager.InsertSketch True
end sub

sub codeBag35(part,wMat)
cLn part,wMat,-0.0010033,-0.0047498,0.0010033,-0.0047498
cLn part,wMat,0.0010033,-0.0047498,0.0010033,0
cLn part,wMat,0.0010033,0,-0.0010033,0
cLn part,wMat,-0.0010033,0,-0.0010033,-0.0047498
cLn part,wMat,-0.0005461,-0.0035052,0.0005461,-0.0035052
cLn part,wMat,0.0005461,-0.0035052,0.0005461,-0.0014986
cLn part,wMat,0.0005461,-0.0014986,-0.0005461,-0.0014986
cLn part,wMat,-0.0005461,-0.0014986,-0.0005461,-0.0035052
Part.SketchManager.InsertSketch True
end sub

sub codeBag31(part,featMgr)
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,0,-1),1
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,0,-1,0,1,0,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag32 part,wMat
set feat4=part.Extension.GetLastFeatureAdded()
feat4.select2 false,0
featMgr.FeatureExtrusion2 1,0,0,0,0,0.000254,0.000254,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,-0.004699),createVec3d(1,0,-0.004699),createVec3d(0,1,-0.004699),1
set feat7=part.Extension.GetLastFeatureAdded()
feat7.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,-0.004699)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag33 part,wMat
set feat7=part.Extension.GetLastFeatureAdded()
feat7.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.0003937,0.0003937,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0.004699),createVec3d(1,0,0.004699),createVec3d(0,1,0.004699),1
set feat11=part.Extension.GetLastFeatureAdded()
feat11.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0.004699)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag34 part,wMat
set feat11=part.Extension.GetLastFeatureAdded()
feat11.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.0003937,0.0003937,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
part.CreatePlaneFixed2 createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
set feat14=part.Extension.GetLastFeatureAdded()
feat14.select2 false,0
part.SketchManager.InsertSketch True
part.BlankRefGeom
Set swActiveMat = Part.SketchManager.ActiveSketch
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
codeBag35 part,wMat
set feat14=part.Extension.GetLastFeatureAdded()
feat14.select2 false,0
featMgr.FeatureExtrusion2 0,0,1,0,0,0.0003937,0.0003937,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0
end sub

sub main
set swApp = Application.SldWorks
code = swApp.RevisionNumber
found = InStr(code, ".")
If (found > 0) Then
  code = Left(code, found-1)
  docVisible=1
  If (CInt(code) >= 18) Then
    docVisible=0
  End If
End If
swApp.SetUserPreferenceToggle 11, FALSE
swApp.SetUserPreferenceToggle 97, FALSE
storePath=BrowseForFolder
If (storePath <> "") Then
   If ((Right(storePath, 1) <> "\") And (Right(storePath, 1) <> "/")) Then
       storePath = storePath + "\"
   End If
   createPart9
End If
end sub
